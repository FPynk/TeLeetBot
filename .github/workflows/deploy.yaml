name: CI/CD

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

concurrency:
  group: deploy-main
  cancel-in-progress: true

jobs:
  test: # test code compiles
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: python -m pip install --upgrade pip
      - run: pip install -r requirements.txt
      - run: python -m py_compile $(git ls-files '*.py')

  deploy: # deploy to GCP VM
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: SSH deploy to GCE VM
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.GCP_VM_HOST }}
          username: ${{ secrets.GCP_VM_USER }}
          key: ${{ secrets.GCP_VM_SSH_KEY }}
          script_stop: true
          script: |
            set -e

            APP_DIR="/home/botuser/TeLeetBot"
            BACKUP_DIR="$APP_DIR/backups"
            DB_FILE="$APP_DIR/bot.db"

            cd "$APP_DIR"

            git fetch --all
            git checkout main
            git pull --ff-only

            python3 -m venv .venv
            . .venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt

            # Idempotent DB init
            python -c "from src import db; db.init(); print('db.init() ok')"

            # Ensure backup dir exists, then backup with a small timeout (handles locks)
            mkdir -p "$BACKUP_DIR"
            sqlite3 -cmd ".timeout 5000" "$DB_FILE" ".backup '$BACKUP_DIR/bot-$(date -u +%Y%m%d-%H%M%S).db'"

            # Restart (non-interactive). Fail if not permitted.
            sudo -n systemctl restart leetcode-bot || { echo 'ERROR: restart failed'; exit 1; }
            sleep 2
            sudo -n systemctl status leetcode-bot || true
            sudo -n journalctl -u leetcode-bot -n 50 --no-pager || true
