name: CI/CD (GHCR + Tailscale OAuth)

on:
  push:
    branches: ["main"]
  workflow_dispatch:

concurrency:
  group: deploy-main
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Log in to GHCR
        run: echo "${{ github.token }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        # Logs the runner's Docker to GHCR using the built-in GITHUB_TOKEN.

      - name: Build image
        run: docker build -t ghcr.io/${{ github.repository_owner }}/teleetbot:main .
        # Builds your image and tags it for GHCR.

      - name: Push image
        run: docker push ghcr.io/${{ github.repository_owner }}/teleetbot:main
        # Pushes the image so your homelab can pull it.

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Connect to tailnet via OAuth
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci
          use-cache: 'true'
        # Joins your tailnet as an ephemeral, tagged device (no 90d key). After this step,
        # the runner can reach homelab privately over Tailscale.

      - name: Deploy via SSH over Tailscale
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOMELAB_SSH_HOST }}  
          username: ${{ secrets.HOMELAB_SSH_USER }} # fpynk
          key: ${{ secrets.HOMELAB_SSH_KEY }}     # private key allowed on the Beelink
          script_stop: true
          script: |
            set -Eeuo pipefail
            cd /srv/apps/teleetbot                           # Go to compose project.
            if docker ps --format '{{.Names}}' | grep -q '^te-leet-bot$'; then
              docker exec te-leet-bot sqlite3 /app/bot.db ".backup '/app/backups/bot-ci-$(date -u +%Y%m%d-%H%M%S).db'" || true
            fi                                               # Optional pre-update DB snapshot.
            docker compose pull                              # Pull the new GHCR tag.
            docker compose up -d                             # Recreate the container.
            docker inspect -f '{{.State.Health.Status}}' te-leet-bot || true
            docker compose ps
        # Runs the usual pull+restart entirely over your private tailnet.
